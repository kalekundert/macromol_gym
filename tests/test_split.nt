test_group_related_structures:
  -
    id: empty
    structures:
      []
    clusters:
    expected:
      []
  -
    id: 0-clusters-1-struct
    structures:
      - 1abc
    clusters:
    expected:
      -
        - 1abc
  -
    id: 0-clusters-2-structs
    structures:
      - 1abc
      - 2abc
    clusters:
    expected:
      -
        - 1abc
      -
        - 2abc
  -
    id: 1-cluster-2-structs
    structures:
      - 1abc
      - 2abc
    clusters:
      > 1abc 1
      > 2abc 1
    expected:
      -
        - 1abc
        - 2abc
  -
    id: 1-cluster-3-structs
    structures:
      - 1abc
      - 2abc
      - 3abc
    clusters:
      > 1abc 1
      > 2abc 1
      > 3abc 1
    expected:
      -
        - 1abc
        - 2abc
        - 3abc
  -
    id: 1-cluster-1-unclustered
    structures:
      - 1abc
      - 2abc
      - 3abc
    clusters:
      > 2abc 1
      > 3abc 1
    expected:
      -
        - 2abc
        - 3abc
      -
        - 1abc
  -
    id: 2-clusters-no-overlap
    structures:
      - 1abc
      - 2abc
      - 3abc
      - 4abc
      - 5abc
      - 6abc
    clusters:
      > 1abc 1
      > 2abc 1
      > 3abc 2
      > 4abc 2
      > 5abc 2
    expected:
      -
        - 3abc
        - 4abc
        - 5abc
      -
        - 1abc
        - 2abc
      -
        - 6abc
  -
    id: 2-clusters-overlap
    structures:
      - 1abc
      - 2abc
      - 3abc
      - 4abc
    clusters:
      > 1abc 1
      > 2abc 1
      > 2abc 2
      > 3abc 2
    expected:
      -
        - 1abc
        - 2abc
        - 3abc
      -
        - 4abc

test_make_splits:
  -
    id: one-by-one
    struct_zone_counts:
      1abc: 1
      2abc: 1
      3abc: 1
      4abc: 1
      5abc: 1
    clusters:
    targets:
      train: 3
      val: 1
      test: 1
    # Note that this requires test structures to be processed in sorted order.
    expected:
      1abc: train
      2abc: train
      3abc: train
      4abc: val
      5abc: test
  -
    id: exact-fit
    struct_zone_counts:
      1abc: 2
      2abc: 2
      3abc: 6
    clusters:
    targets:
      train: 6
      val: 2
      test: 2
    expected:
      1abc: val
      2abc: test
      3abc: train
  -
    id: exact-fit-cluster
    struct_zone_counts:
      1abc: 2
      2abc: 2
      3abc: 3
      4abc: 2
      5abc: 1
    clusters:
      > 3abc 1
      > 4abc 1
      > 4abc 2
      > 5abc 2
    targets:
      train: 6
      val: 2
      test: 2
    expected:
      1abc: val
      2abc: test
      3abc: train
      4abc: train
      5abc: train
  -
    id: overfill
    struct_zone_counts:
      1abc: 2
      2abc: 2
      3abc: 7
    clusters:
    targets:
      train: 6
      val: 2
      test: 2
    expected:
      1abc: val
      2abc: test
      3abc: train
  -
    id: overfill-cluster
    struct_zone_counts:
      1abc: 2
      2abc: 2
      3abc: 3
      4abc: 2
      5abc: 1
      6abc: 1
    clusters:
      > 3abc 1
      > 4abc 1
      > 4abc 2
      > 5abc 2
      > 3abc 3
      > 6abc 3
    targets:
      train: 6
      val: 2
      test: 2
    expected:
      1abc: val
      2abc: test
      3abc: train
      4abc: train
      5abc: train
      6abc: train
  -
    id: underfill
    struct_zone_counts:
      1abc: 2
      2abc: 2
      3abc: 5
    clusters:
    targets:
      train: 6
      val: 2
      test: 2
    expected:
      1abc: val
      2abc: test
      3abc: train
  -
    id: underfill-cluster
    struct_zone_counts:
      1abc: 2
      2abc: 2
      3abc: 3
      4abc: 2
    clusters:
      > 3abc 1
      > 4abc 1
    targets:
      train: 6
      val: 2
      test: 2
    expected:
      1abc: val
      2abc: test
      3abc: train
      4abc: train

